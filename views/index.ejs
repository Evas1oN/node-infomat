<!DOCTYPE html>
<html lang="ru">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Инфомат</title>
        <!-- <link rel="stylesheet" href="bootstrap/dist/css/bootstrap.min.css"> -->
        <link rel="stylesheet" href="materialize/css/materialize.min.css">

        <style>
            .infbtn {
                margin: 5px;
                padding: 10px;
                line-height: 1.3;
                height: 60px;
                width: 200px;
            }
        </style>
    </head>

    <body>
        <header style="margin-bottom: 30px;">
            <nav class="grey lighten-5">
                <div style="color: black; margin-left: 30px;">
                    ГОСУДАРСТВЕННОЕ АВТОНОМНОЕ УЧРЕЖДЕНИЕ ЗДРАВООХРАНЕНИЯ "ОБЛАСТНАЯ КЛИНИЧЕСКАЯ БОЛЬНИЦА 3"
                </div>
            </nav>
        </header>

        <div class="container">
            <div class="row">
                <a class="btn" style="width: 100%;" id="back-link">Назад</a>
            </div>
            <% if (files.filter(x => x.type === 'directory').length > 0 ) { %>
                <div>Категории</div>
                <hr>
                <div class="row">
                    <% for (const file of files.filter(x => x.type === 'directory')) {%>
                        <a class="btn infbtn blue lighten-1" href="<%= file.link %>"><%= file.filename %></a>
                    <% } %>
                </div>
            <% } %>


            <%  if (files.filter(x => x.type === 'file').length > 0 ) {  %>
                <div class="row">
                    <div>Файлы</div>
                    <hr>
                    <% for (const file of files.filter(x => x.type === 'file')) {%>
                        <a class="file infbtn btn col s2" href="<%= file.link %>"><%= file.filename %></a>
                    <% } %>    
                </div>
            <% } %>
    

            <div id="modal1" class="modal modal-fixed-footer">
                <div class="modal-content">
                    <canvas id="renderer"></canvas>                
                </div>
                <div class="modal-footer" style="display: flex; justify-content: space-evenly;">
                    <button class="btn" onclick="prevPage()">Пред. страница</button>
                    <div style="display: flex; justify-content: space-between; min-width: 60px; margin: auto;">
                        <div id="currentpage">0</div>
                        <div id="currentpage"> / </div>
                        <div id="maxpages">0</div>
                    </div>
                    <button class="btn" onclick="nextPage()">След. страница</button>
                </div>
            </div>
        </div>
    </body>
</html>

<script src="materialize/js/materialize.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.0.943/pdf.min.js"></script>
<script>
    M.AutoInit();
    const modal = M.Modal.getInstance(document.getElementById('modal1'))

    const element = document.getElementById('back-link');
    element.setAttribute('href', document.referrer);
    element.addEventListener('click', () => {
        history.back();
        return false;
    })
</script>

<script>
    let currentZoomLevel = 0
    const zoomLevel = [1.5, 1.7]

    let pdf = {
        content: undefined,
        currentPage: 1,
        maxPages: 1,
        zoom: zoomLevel[0]
    }

    let rendering = false;

    function render() {
        rendering = true;
        pdf.content.getPage(pdf.currentPage).then((page) => {
            const canvas = document.getElementById('renderer');
            const context = canvas.getContext('2d');
            const viewport = page.getViewport(pdf.zoom);

            canvas.width = viewport.width;
            canvas.height = viewport.height;

            page.render({
                canvasContext: context,
                viewport: viewport
            })
            rendering = false;
        })
    }
</script>

<script>
    const files = document.querySelectorAll('.file');

    for (const file of files) {
        file.addEventListener('click', async (event) => {
            event.preventDefault();
            modal.open();
            scrollToTop();
            rendering = true;

            pdfjsLib.getDocument(event.srcElement.href).then((pdffile) => {
                pdf.content = pdffile;
                pdf.currentPage = 1;
                pdf.maxPages = pdffile._pdfInfo.numPages;
                updateCurrentPage();
                document.getElementById('maxpages').innerHTML = pdf.maxPages;
                render();
                rendering = false;
            })
        })
    }

    function nextPage() {
        if (pdf.currentPage === pdf.maxPages) return;
        scrollToTop()
        pdf.currentPage++;
        updateCurrentPage();
        render();
    }

    function prevPage() {
        if (pdf.currentPage === 1) return;
        scrollToTop()
        pdf.currentPage--;
        updateCurrentPage();
        render();
    }

    function updateCurrentPage() {
        document.getElementById('currentpage').innerHTML = pdf.currentPage;
    }

    function scrollToTop() {
        document.querySelector(".modal-content").scrollTo({ top: 0, behavior: 'smooth' })
    }

    document.getElementById('renderer').addEventListener("click", () => {
        currentZoomLevel += 1
        if (currentZoomLevel >= zoomLevel.length) {
            currentZoomLevel = 0
        }
        pdf.zoom = zoomLevel[currentZoomLevel]
        render()
    })
</script>